obs_multisite <- prec_mes[,station]>=valmin
#
gen_multisite <- generate(model_multisite,exogen=exogen,origin=origin,end=end)
#
gen_multisite_logit <- generate(model_multisite_logit,exogen=exogen,origin=origin,end=end)
#amount
precamount <- PrecipitationAmountModel(prec_mes,station=station,origin=origin)
val <- predict(precamount)
prec_gen <- generate(precamount)
month <- adddate(as.data.frame(residuals(precamount[[1]])),origin=origin)$month
plot(factor(month),residuals(precamount[[1]]))
qqplot(prec_mes[,station[1]],prec_gen[[1]])
abline(0,1)
library(RMAWGEN)
load('BullooModInp.RData')
TX_CLIMATE <- NULL
TN_CLIMATE <- NULL
PREC_CLIMATE <- NULL
# Calibration period
year_max <- 2018
year_min <- 1961
origin <- "1961-1-1"
station <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004", "T45007")
names(ELEVATION) <- STATION_NAMES
names(LOCATION) <- STATION_NAMES
ELEVATION[station]
LOCATION[station]
n_GPCA_iter <- 5
n_GPCA_iteration_residuals <- 5
p_test <- 1
p_prec <- 3
exogen <- NULL
exogen_sim <- exogen
generationP03GPCA_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_prec,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
# ---- Percipitation ----
rm(list = ls())
library(RMAWGEN)
# ---- Percipitation ----
rm(list = ls())
load('BullooModInp.RData')
TX_CLIMATE <- NULL
TN_CLIMATE <- NULL
PREC_CLIMATE <- NULL
# Calibration period
year_max <- 2018
year_min <- 1989
origin <- "1961-1-1"
station <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004", "T45007")
names(ELEVATION) <- STATION_NAMES
names(LOCATION) <- STATION_NAMES
ELEVATION[station]
LOCATION[station]
n_GPCA_iter <- 5
n_GPCA_iteration_residuals <- 5
p_test <- 1
p_prec <- 3
exogen <- NULL
exogen_sim <- exogen
generationP03GPCA_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_prec,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
generationP01GPCA_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_test,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
generationP03_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_prec,
n_GPCA_iteration=0,
n_GPCA_iteration_residuals=0,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
origin <- "1989-1-1"
generationP01_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_test,
n_GPCA_iteration=0,
n_GPCA_iteration_residuals=0,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
VARselect(generationP03_prec$data_prec,lag.max=20)
VARselect(generationP03GPCA_prec$var@GPCA_data$final_results,lag.max=20)
normality_test(generationP01_prec$var)
normality_test(generationP03_prec$var)
normality_test(generationP01GPCA_prec$var)
normality_test(generationP03GPCA_prec$var)
serial_test(generationP01_prec$var)
serial_test(generationP03_prec$var)
serial_test(generationP01GPCA_prec$var)
serial_test(generationP03GPCA_prec$var)
# Collecting the measured and generated time series
prec_mes <- generationP01_prec$prec_mes
prec_gen <- list(P03GPCA=generationP03GPCA_prec$prec_gen,
P01GPCA=generationP01GPCA_prec$prec_gen,
P03=generationP03GPCA_prec$prec_gen,
P01=generationP01GPCA_prec$prec_gen)
NDAY <- nrow(prec_mes)
days <- list()
days$DJF <-  extractmonths(data=1:NDAY,when=c("Dec","Jan","Feb"),origin=origin)
days$MAM <- extractmonths(data=1:NDAY,when=c("Mar","Apr","May"),origin=origin)
days$JJA <- extractmonths(data=1:NDAY,when=c("Jun","Jul","Aug"),origin=origin)
days$SON <- extractmonths(data=1:NDAY,when=c("Sep","Oct","Nov"),origin=origin)
days
# SET THE CORRECT PATH WHERE TO PLOT THE FIGURES
wpath <- getwd()
CEX <- 1.4
station00 <- station <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001",
"T45002", "T45003", "T45004", "T45007")
for (stat in station00){
print(stat)
for (it in names(days)) {
str(it)
name <- it
season <- days[[it]]
lag <- 1
pdf_prec <- paste(wpath,"/QQpLots/",stat,"prec_qqplot_",lag,"_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_prec  <- paste(names(prec_gen),stat,'lag',lag,"days",it,sep=" ")
Rangex <- range(prec_mes[season,])
Rangey <- range(c(prec_gen[[1]][season,],prec_gen[[2]][season,],prec_gen[[3]][season,],prec_gen[[4]][season,]))
XLim <- YLim  <- c(min(c(Rangex,Rangey)),max(c(Rangex,Rangey)))
qqplot_RMAWGEN_prec(prec_mes=prec_mes,prec_gen=prec_gen,main=main_prec,station=stat,when=season,pdf=pdf_prec,
lag=lag,cex.main=CEX,cex.lab=CEX,cex.axis=CEX,xlim=XLim,ylim=YLim,cex=1.2)
}
for (it in names(days)){
str(it)
name <- it
season <- days[[it]]
lag <- 1
lag <- 2
pdf_prec <- paste(wpath,"/QQplots/",stat,"prec_qqplot_",'lag',lag,"_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_prec  <- paste(names(prec_gen),stat,lag,"days",it,sep=" ")
qqplot_RMAWGEN_prec(prec_mes=prec_mes,prec_gen=prec_gen,main=main_prec,station=stat,when=season,pdf=pdf_prec,
lag=lag,xlim=XLim,cex.main=CEX,cex.lab=CEX,cex.axis=CEX,ylim=YLim,cex=1.2)
}
}
# ACF Function
pdf(paste(wpath,"acf_prec_P03GPCA.pdf",sep="/"))
plot(acf(prec_gen$P03GPCA,lag=10),xlab="lag [day]")
dev.off()
pdf(paste(wpath,"acf_prec_mes.pdf",sep="/"))
plot(acf(prec_mes,lag=10))
# ACF Function
pdf(paste(wpath,"QQplots/acf_prec_P03GPCA.pdf",sep="/"))
plot(acf(prec_gen$P03GPCA,lag=10),xlab="lag [day]")
dev.off()
pdf(paste(wpath,"QQplots/acf_prec_mes.pdf",sep="/"))
plot(acf(prec_mes,lag=10))
dev.off()
station <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004", "T45007")
n_GPCA_iter <- 5
n_GPCA_iteration_residuals <- 5
p_test <- 1
p_temp <- 10
exogen <- normalizeGaussian_severalstations(x=prec_mes,
data=prec_mes,
sample="monthly", origin_x=origin,
origin_data=origin, step=0)
exogen_sim <- normalizeGaussian_severalstations(x=prec_gen$P03GPCA,
data=prec_gen$P03GPCA,
sample="monthly",
origin_x=origin,
origin_data=origin,step=0)
# order p = 10 and PCA Gaussianization
generationP10GPCA_temp <- ComprehensiveTemperatureGenerator(station=station,
Tx_all=TEMPERATURE_MAX,Tn_all=TEMPERATURE_MIN,
year_min=year_min, year_max=year_max,p=p_temp,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,exogen_sim=exogen_sim,sample="monthly",
mean_climate_Tn=TN_CLIMATE,mean_climate_Tx=TX_CLIMATE)
# order p = 1 and PCA Gaussianization
generationP01GPCA_temp <- ComprehensiveTemperatureGenerator(station=station,
Tx_all=TEMPERATURE_MAX,Tn_all=TEMPERATURE_MIN,
year_min=year_min, year_max=year_max,p=p_test,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,exogen_sim=exogen_sim,sample="monthly",
mean_climate_Tn=TN_CLIMATE,mean_climate_Tx=TX_CLIMATE)
# order p = 1 and PCA Gaussianization
generationP01GPCA_temp <- ComprehensiveTemperatureGenerator(station=station,
Tx_all=TEMPERATURE_MAX,Tn_all=TEMPERATURE_MIN,
year_min=year_min, year_max=year_max,p=p_test,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,exogen_sim=exogen_sim,sample="monthly",
mean_climate_Tn=TN_CLIMATE,mean_climate_Tx=TX_CLIMATE)
# order p = 10 and without PCA Gaussianization
generationP10_temp <- ComprehensiveTemperatureGenerator(station=station,
Tx_all=TEMPERATURE_MAX,Tn_all=TEMPERATURE_MIN,
year_min=year_min,year_max=year_max,p=p_temp,
n_GPCA_iteration=0,n_GPCA_iteration_residuals=0,
exogen=exogen,exogen_sim=exogen_sim,sample="monthly",
mean_climate_Tn=TN_CLIMATE,mean_climate_Tx=TX_CLIMATE)
# order p = 1 and without PCA Gaussianization
generationP01_temp <- ComprehensiveTemperatureGenerator(station=station,
Tx_all=TEMPERATURE_MAX,Tn_all=TEMPERATURE_MIN,
year_min=year_min,year_max=year_max,p=p_test,
n_GPCA_iteration=0,n_GPCA_iteration_residuals=0,
exogen=exogen,exogen_sim=exogen_sim,sample="monthly",
mean_climate_Tn=TN_CLIMATE,mean_climate_Tx=TX_CLIMATE)
# Normality and serial Test
serial_test(generationP10GPCA_temp$var)
serial_test(generationP01GPCA_temp$var)
serial_test(generationP10_temp$var)
serial_test(generationP01_temp$var)
normality_test(generationP10GPCA_temp$var)
normality_test(generationP01GPCA_temp$var)
normality_test(generationP10_temp$var)
normality_test(generationP01_temp$var)
# Season
Tx_gen <- list(P01_temp = generationP01_temp$output$Tx_gen,
P10_temp = generationP10_temp$output$Tx_gen,
P01GPCA_temp = generationP01GPCA_temp$output$Tx_gen,
P10GPCA_temp = generationP10GPCA_temp$output$Tx_gen
)
#Tx_gen <- generationP01_temp$output$Tx_gen
Tn_gen <- generationP01_temp$output$Tn_gen
Tx_mes <- generationP01_temp$input$Tx_mes
Tn_mes <- generationP01_temp$input$Tn_mes
NDAY <- nrow(Tx_mes)
days <- list()
days$DJF <-  extractmonths(data=1:NDAY,when=c("Dec","Jan","Feb"),origin=origin)
days$MAM <- extractmonths(data=1:NDAY,when=c("Mar","Apr","May"),origin=origin)
days$JJA <- extractmonths(data=1:NDAY,when=c("Jun","Jul","Aug"),origin=origin)
days$SON <- extractmonths(data=1:NDAY,when=c("Sep","Oct","Nov"),origin=origin)
Tn_gen <- list(P01_temp = generationP01_temp$output$Tn_gen,
P10_temp = generationP10_temp$output$Tn_gen,
P01GPCA_temp = generationP01GPCA_temp$output$Tn_gen,
P10GPCA_temp = generationP10GPCA_temp$output$Tn_gen
)
View(Tn_gen)
Tn_gen[["P10_temp"]]
Tx_mes <- generationP01_temp$input$Tx_mes
Tn_mes <- generationP01_temp$input$Tn_mes
NDAY <- nrow(Tx_mes)
days <- list()
days$DJF <-  extractmonths(data=1:NDAY,when=c("Dec","Jan","Feb"),origin=origin)
days$MAM <- extractmonths(data=1:NDAY,when=c("Mar","Apr","May"),origin=origin)
days$JJA <- extractmonths(data=1:NDAY,when=c("Jun","Jul","Aug"),origin=origin)
days$SON <- extractmonths(data=1:NDAY,when=c("Sep","Oct","Nov"),origin=origin)
wpath <- getwd()
station00 <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001",
"T45002", "T45003", "T45004", "T45007")
CEX <- 1.4
for (stat in station00){
for (it in names(days)) {
str(it)
name <- it
season <- days[[it]]
pdf_temp <- paste(wpath,"/QQplots/",stat,"/Tx_qqplot_","_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_temp  <- paste(names(Tx_gen),stat,"days",it,sep=" ")
Rangex <- range(Tx_mes[season,])
Rangey <- range(c(Tx_gen[[1]][season,],Tx_gen[[2]][season,],Tx_gen[[3]][season,],Tx_gen[[4]][season,]))
XLim <- YLim  <- c(min(c(Rangex,Rangey)),max(c(Rangex,Rangey)))
qqplot_RMAWGEN_Tx(Tx_mes = Tx_mes, Tx_gen = Tx_gen, Tn_gen = Tn_gen, Tn_mes = Tn_mes, Tx_spline = NULL,
Tn_spline = NULL, main = main_temp, station = stat, when = season, pdf = pdf_temp,
cex.main = CEX, cex.lab = CEX,cex.axis=CEX,xlim=XLim,ylim=YLim,cex=1.2)
}
for (it in names(days)) {
str(it)
name <- it
season <- days[[it]]
pdf_temp <- paste(wpath,"/QQplots/",stat,"/Tn_qqplot_","_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_temp  <- paste(names(Tn_gen),stat,"days",it,sep=" ")
Rangex <- range(Tx_mes[season,])
Rangey <- range(c(Tn_gen[[1]][season,],Tn_gen[[2]][season,],Tn_gen[[3]][season,],Tn_gen[[4]][season,]))
XLim <- YLim  <- c(min(c(Rangex,Rangey)),max(c(Rangex,Rangey)))
qqplot_RMAWGEN_Tn(Tx_mes = Tx_mes, Tx_gen = Tx_gen, Tn_gen = Tn_gen, Tn_mes = Tn_mes, Tx_spline = NULL,
Tn_spline = NULL, main = main_temp, station = stat, when = season, pdf = pdf_temp,
cex.main = CEX, cex.lab = CEX,cex.axis=CEX,xlim=XLim,ylim=YLim,cex=1.2)
}
}
for (stat in station00){
for (it in names(days)) {
str(it)
name <- it
season <- days[[it]]
pdf_temp <- paste(wpath,"/QQplots/",stat,"/Tx_qqplot_","_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_temp  <- paste(names(Tx_gen),stat,"days",it,sep=" ")
Rangex <- range(Tx_mes[season,])
Rangey <- range(c(Tx_gen[[1]][season,],Tx_gen[[2]][season,],Tx_gen[[3]][season,],Tx_gen[[4]][season,]))
XLim <- YLim  <- c(min(c(Rangex,Rangey)),max(c(Rangex,Rangey)))
qqplot_RMAWGEN_Tx(Tx_mes = Tx_mes, Tx_gen = Tx_gen, Tn_gen = Tn_gen, Tn_mes = Tn_mes, Tx_spline = NULL,
Tn_spline = NULL, main = main_temp, station = stat, when = season, pdf = pdf_temp,
cex.main = CEX, cex.lab = CEX,cex.axis=CEX,xlim=XLim,ylim=YLim,cex=1.2)
}
for (it in names(days)) {
str(it)
name <- it
season <- days[[it]]
pdf_temp <- paste(wpath,"/QQplots/",stat,"Tn_qqplot","_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_temp  <- paste(names(Tn_gen),stat,"days",it,sep=" ")
Rangex <- range(Tx_mes[season,])
Rangey <- range(c(Tn_gen[[1]][season,],Tn_gen[[2]][season,],Tn_gen[[3]][season,],Tn_gen[[4]][season,]))
XLim <- YLim  <- c(min(c(Rangex,Rangey)),max(c(Rangex,Rangey)))
qqplot_RMAWGEN_Tn(Tx_mes = Tx_mes, Tx_gen = Tx_gen, Tn_gen = Tn_gen, Tn_mes = Tn_mes, Tx_spline = NULL,
Tn_spline = NULL, main = main_temp, station = stat, when = season, pdf = pdf_temp,
cex.main = CEX, cex.lab = CEX,cex.axis=CEX,xlim=XLim,ylim=YLim,cex=1.2)
}
}
CEX <- 1.4
for (stat in station00){
for (it in names(days)) {
str(it)
name <- it
season <- days[[it]]
pdf_temp <- paste(wpath,"/QQplots/",stat,"Tx_qqplot","_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_temp  <- paste(names(Tx_gen),stat,"days",it,sep=" ")
Rangex <- range(Tx_mes[season,])
Rangey <- range(c(Tx_gen[[1]][season,],Tx_gen[[2]][season,],Tx_gen[[3]][season,],Tx_gen[[4]][season,]))
XLim <- YLim  <- c(min(c(Rangex,Rangey)),max(c(Rangex,Rangey)))
qqplot_RMAWGEN_Tx(Tx_mes = Tx_mes, Tx_gen = Tx_gen, Tn_gen = Tn_gen, Tn_mes = Tn_mes, Tx_spline = NULL,
Tn_spline = NULL, main = main_temp, station = stat, when = season, pdf = pdf_temp,
cex.main = CEX, cex.lab = CEX,cex.axis=CEX,xlim=XLim,ylim=YLim,cex=1.2)
}
for (it in names(days)) {
str(it)
name <- it
season <- days[[it]]
pdf_temp <- paste(wpath,"/QQplots/",stat,"Tn_qqplot","_",year_min,"_",year_max,"_",it,".pdf",sep="")
main_temp  <- paste(names(Tn_gen),stat,"days",it,sep=" ")
Rangex <- range(Tx_mes[season,])
Rangey <- range(c(Tn_gen[[1]][season,],Tn_gen[[2]][season,],Tn_gen[[3]][season,],Tn_gen[[4]][season,]))
XLim <- YLim  <- c(min(c(Rangex,Rangey)),max(c(Rangex,Rangey)))
qqplot_RMAWGEN_Tn(Tx_mes = Tx_mes, Tx_gen = Tx_gen, Tn_gen = Tn_gen, Tn_mes = Tn_mes, Tx_spline = NULL,
Tn_spline = NULL, main = main_temp, station = stat, when = season, pdf = pdf_temp,
cex.main = CEX, cex.lab = CEX,cex.axis=CEX,xlim=XLim,ylim=YLim,cex=1.2)
}
}
library(RGENERATEPREC)
load('BullooModInp.RData')
str(TEMPERATURE_MAX)
str(TEMPERATURE_MIN)
str(PRECIPITATION)
year_min <- 1989
year_max <- 2018
origin <- paste(year_min,1,1,sep="-")
end <- paste(year_max,12,31,sep="-")
period <- PRECIPITATION$year>=year_min & PRECIPITATION$year<=year_max
period_temp <- TEMPERATURE_MAX$year>=year_min & TEMPERATURE_MAX$year<=year_max
prec_mes <- PRECIPITATION[period,]
Tx_mes <- TEMPERATURE_MAX[period_temp,]
Tn_mes <- TEMPERATURE_MIN[period_temp,]
accepted <- array(TRUE,length(names(prec_mes)))
names(accepted) <- names(prec_mes)
# accepted
for (it in names(prec_mes)) {
acc <- TRUE
acc <- (length(which(!is.na(Tx_mes[,it])))==length(Tx_mes[,it]))
acc <- (length(which(!is.na(Tn_mes[,it])))==length(Tn_mes[,it])) & acc
accepted[it]  <- (length(which(!is.na(prec_mes[,it])))==length(prec_mes[,it])) & acc
}
names(accepted)
valmin <- 1.0
prec_mes <- prec_mes[,accepted]
head(prec_mes)
valmin <- 1.0
prec_occurence_mes <- prec_mes
station <- names(prec_mes)[!(names(prec_mes) %in% c("day","month","year"))]
prec_occurence_mes[,station] <- prec_mes[,station]>=valmin
head(prec_occurence_mes)
View(STATION_LATLON)
View(prec_mes)
names(accepted)
they <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004","T45007") ##station
exogen <- Tx_mes[,they]-Tn_mes[,they]
months <- factor(prec_mes$month)
model <- PrecipitationOccurrenceMultiSiteModel(x=prec_mes[,they],exogen=exogen,origin=origin)
names(model)
class(model[[1]])
prec_gen_occ <- generate(model,exogen=exogen,monthly.factor=months,n=length(months))
str(prec_gen_occ)
model_amount <- PrecipitationAmountModel(prec_mes,station=they,origin=origin)
names(model_amount)
class(model_amount)
names(model_amount)
for (its in model_amount$station) summary(model_amount[[its]])
model_amount$station
model_amount$sample
model_amount$origin
model_amount$valmin
prec_gen <- generate(model_amount,newdata=prec_gen_occ)
names(prec_gen)
library(ggplot2)
library(lubridate)
library(reshape2)
str(prec_mes)
str(prec_gen)
df <- list(obs=prec_mes[names(prec_gen)],gen=prec_gen)
for ( i in 1:length(df)) {
df[[i]]$date <- as.Date(origin)+days(1:nrow(df[[i]]))-1
}
df <- melt(df,id="date")
names(df)[names(df)=="variable"] <- "station"
names(df)[names(df)=="L1"] <- "variable"
df$month <- factor(month(df$date))
df$season <- "none"
df$season[df$month %in% c(12,2,1)] <- "1.DJF"
df$season[df$month %in% c(3,4,5)] <-  "2.MAM"
df$season[df$month %in% c(6,7,8)] <-  "3.JJA"
df$season[df$month %in% c(9,10,11)] <-  "4.SON"
df
qqdf <- split(df,f=paste(df$station,df$season,sep="_")) %>%
lapply(FUN=function(x){list(obs=x$value[x$variable=="obs"],gen=x$value[x$variable=="gen"])}) %>%
lapply(FUN=qqplot_) %>%
melt(id=c("obs","gen"))
qqplot_ <- function(df) {
df <- as.list(df)
o <- qqplot(df[[1]],df[[2]],plot.it=FALSE)
names(o) <- names(df)[1:2]
o <- as.data.frame(o)
return(o)
}
qqdf <- split(df,f=paste(df$station,df$season,sep="_")) %>%
lapply(FUN=function(x){list(obs=x$value[x$variable=="obs"],gen=x$value[x$variable=="gen"])}) %>%
lapply(FUN=qqplot_) %>%
melt(id=c("obs","gen"))
qqdf_add <- str_split(qqdf$L1,pattern="_") %>% do.call(what=rbind) %>% as.data.frame()
names(qqdf_add) <- c("station","season")
qqdf <- cbind(qqdf,qqdf_add)
qqdf
head(qqdf)
## ggplot plot
ggdf <- ggplot(data=qqdf)+geom_point(aes(x=obs,y=gen))+theme_bw()+geom_abline()+facet_grid(station ~ season)+xlab("observed")+ylab("generated")
show(ggdry)
ggdry <- ggplot(data=qqdry)+geom_point(aes(x=obs,y=gen))+theme_bw()+geom_abline()+facet_grid(. ~ season)+xlab("observed")+ylab("generated")
show(ggdf)
View(qqdf)
ggsave("ggdf.pdf")
ggsave("ggdf.png")
ggsave("ggdf.png",height = 3.4, width = 8)
ggsave("ggdf.png",height = 4, width = 8)
library(dplyr)
qqdf_T36133 <- qqdf %>% filter(station == "T36133")
head(qqdf_T36133)
## ggplot plot
ggdf_T36133 <- ggplot(data=qqdf_T36133)+
geom_point(aes(x=obs,y=gen))+
theme_bw()+
geom_abline()+
facet_grid(station ~ season)+xlab("observed")+
ylab("generated")
show(ggdf_T36133)
qqdf_T36133 <- qqdf %>% filter(station == ("T36133" &"T36137"& "T44040"& "T44120"& "T45000"))
qqdf_T36133 <- qqdf %>% filter(station == 1:5)
head(qqdf_T36133)
qqdf_T36133 <- qqdf %>% filter(station == "T36133" & station == "T36137" & station == "T44040"& station =="T44120"& station =="T45000")
head(qqdf_T36133)
#they <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004","T45007")
summary(qqdf)
qqdf_T36133 <- qqdf %>% filter(station %in% c("T36133", "T36137", "T44040", "T44120", "T45000"))
head(qqdf_T36133)
## ggplot plot
ggdf_T36133 <- ggplot(data=qqdf_T36133)+
geom_point(aes(x=obs,y=gen))+
theme_bw()+
geom_abline()+
facet_grid(station ~ season)+xlab("observed")+
ylab("generated")
show(ggdf_T36133)
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("copula")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC", dependencies = FALSE)
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")
install.packages("RGENERATEPREC")

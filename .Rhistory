<<<<<<< HEAD
View(prec_mod)
they
they[1]
prec_mod <- as.data.frame(df_obs.T36133$bs_mod,
df_obs.T36137$bs_mod,
df_obs.T44040$bs_mod,
df_obs.T44120$bs_mod,
df_obs.T45000$bs_mod,
df_obs.T45001$bs_mod,
df_obs.T45002$bs_mod,
df_obs.T45003$bs_mod,
df_obs.T45004$bs_mod,
df_obs.T45007$bs_mod)
View(prec_mod)
prec_mod <- as.data.frame(df_obs.T36133$bs_mod,
df_obs.T36137$bs_mod,
df_obs.T44040$bs_mod,
df_obs.T44120$bs_mod,
df_obs.T45000$bs_mod,
df_obs.T45001$bs_mod,
df_obs.T45002$bs_mod,
df_obs.T45003$bs_mod,
df_obs.T45004$bs_mod,
df_obs.T45007$bs_mod)
df_obs.T36133$bs_mod <- df_obs.T36133$obs.T36133
df_obs.T36133$bs_mod
df_obs.T36137$bs_mod
df_obs.T44040$bs_mod
df_obs.T44120$bs_mod
df_obs.T45000$bs_mod
df_obs.T45001$bs_mod
df_obs.T45002$bs_mod
df_obs.T45003$bs_mod
prec_mod <- as.data.frame(df_obs.T36133$bs_mod,
df_obs.T36137$bs_mod,
df_obs.T44040$bs_mod,
df_obs.T44120$bs_mod,
df_obs.T45000$bs_mod,
df_obs.T45001$bs_mod,
df_obs.T45002$bs_mod,
df_obs.T45003$bs_mod,
df_obs.T45004$bs_mod,
df_obs.T45007$bs_mod)
prec_mod <- data.frame(df_obs.T36133$bs_mod,
df_obs.T36137$bs_mod,
df_obs.T44040$bs_mod,
df_obs.T44120$bs_mod,
df_obs.T45000$bs_mod,
df_obs.T45001$bs_mod,
df_obs.T45002$bs_mod,
df_obs.T45003$bs_mod,
df_obs.T45004$bs_mod,
df_obs.T45007$bs_mod)
prec_mod <- data.frame(df_obs.T36133$bs_mod)
names(prec_mod) <- they[1]
model1_amount_mod <- PrecipitationAmountModel(prec_mod,station=they[1],origin=origin)
prec_gen1_mod <- generate(model1_amount_mod,newdata=prec_gen1_occ)
# station T36133
para_monthly_T36133 <- df_obs.T36133$obs.T36133 %>% split(df_obs.T36133$month) %>% lapply(FUN=paraml,valmin=valmin)
df_obs.T36133$bs_mod <- df_obs.T36133$obs.T36133
for (mo in unique(df_obs.T36133$month))  {
im <- which(df_obs.T36133$month==mo)
df$obs_mod[im] <- modify_distribution(x=df_obs.T36133$obs.T36133s[im],paraml=para_monthly_T36133[[mo]],valmin=valmin)
}
color_month <-  rep(c("#E6352F","#34A74B","#3D79F3" ),4)[c(12,1:11)]
gg_T36133 <- ggplot()+
geom_line(data=df_obs.T36133,mapping=aes(x=obs.T36133,y=bs_mod,col=month))+facet_grid(. ~ season)+theme_bw()
gg_T36133 <- gg_T36133 +scale_color_manual(values = color_month)
ggsave("gg_T36133.png", width = 8)
show(gg_T36133)
library(tidyverse)
library(lubridate)
library(reshape2)
library(RGENERATEPREC)
load('BullooModInp.RData')
str(TEMPERATURE_MAX)
str(TEMPERATURE_MIN)
str(PRECIPITATION)
CatStations <- CatStations[CatStations$Available==1,]
plot(BuffArea,typ='l',asp=1,xlab='longitute',ylab='latitude')
lines(CatBoundary,col='red')
with(CatStations,points(lon,lat))
year_min <- 1989
year_max <- 2018
origin <- paste(year_min,1,1,sep="-")
end <- paste(year_max,12,31,sep="-")
period <- PRECIPITATION$year>=year_min & PRECIPITATION$year<=year_max
period_temp <- TEMPERATURE_MAX$year>=year_min & TEMPERATURE_MAX$year<=year_max
prec_mes <- PRECIPITATION[period,]
Tx_mes <- TEMPERATURE_MAX[period_temp,]
Tn_mes <- TEMPERATURE_MIN[period_temp,]
accepted <- array(TRUE,length(names(prec_mes)))
names(accepted) <- names(prec_mes)
# accepted
for (it in names(prec_mes)) {
acc <- TRUE
acc <- (length(which(!is.na(Tx_mes[,it])))==length(Tx_mes[,it]))
acc <- (length(which(!is.na(Tn_mes[,it])))==length(Tn_mes[,it])) & acc
accepted[it]  <- (length(which(!is.na(prec_mes[,it])))==length(prec_mes[,it])) & acc
}
names(accepted)
prec_mes <- prec_mes[,accepted]
head(prec_mes)
Tx_mes <- Tx_mes[,accepted]
Tn_mes <- Tn_mes[,accepted]
valmin <- 1.0
prec_occurence_mes <- prec_mes
station <- names(prec_mes)[!(names(prec_mes) %in% c("day","month","year"))]
prec_occurence_mes[,station] <- prec_mes[,station]>=valmin
head(prec_occurence_mes)
they <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004","T45007") ##station
exogen <- Tx_mes[,they]-Tn_mes[,they]
months <- factor(prec_mes$month)
model <- PrecipitationOccurrenceMultiSiteModel(x=prec_mes[,they],exogen=exogen,origin=origin)
names(model)
class(model[[1]])
class(model$ccgamma)
class(model$K)
class(model$type)
prec_gen_occ <- generate(model,exogen=exogen,monthly.factor=months,n=length(months))
model_amount <- PrecipitationAmountModel(prec_mes,station=they,origin=origin)
for (its in model_amount$station) summary(model_amount[[its]])
model_amount$station
model_amount$sample
model_amount$origin
model_amount$valmin
prec_gen <- generate(model_amount,newdata=prec_gen_occ)
df <- list(obs=prec_mes[names(prec_gen)],gen=prec_gen)
for ( i in 1:length(df)) {
df[[i]]$date <- as.Date(origin)+days(1:nrow(df[[i]]))-1
}
df <- list(obs=prec_mes[,names(prec_gen)],gen=prec_gen)
for ( i in 1:length(df)) {
df[[i]]$date <- as.Date(origin)+days(1:nrow(df[[i]]))-1
}
library(lubridate)
df <- list(obs=prec_mes[,names(prec_gen)],gen=prec_gen)
for ( i in 1:length(df)) {
df[[i]]$date <- as.Date(origin)+days(1:nrow(df[[i]]))-1
}
library(tidyverse)
library(lubridate)
df <- list(obs=prec_mes[,names(prec_gen)],gen=prec_gen)
for ( i in 1:length(df)) {
df[[i]]$date <- as.Date(origin)+days(1:nrow(df[[i]]))-1
}
detach("tidyverse",unload = T)
detach("package:tidyverse",unload = TRUE)
library(lubridate)
df <- list(obs=prec_mes[,names(prec_gen)],gen=prec_gen)
for ( i in 1:length(df)) {
df[[i]]$date <- as.Date(origin)+days(1:nrow(df[[i]]))-1
}
detach("package:lubridate", TRUE)
library(lubridate)
df <- list(obs=prec_mes[,names(prec_gen)],gen=prec_gen)
for ( i in 1:length(df)) {
df[[i]]$date <- as.Date(origin)+days(1:nrow(df[[i]]))-1
}
df <- melt(df,id="date")
names(df)[names(df)=="variable"] <- "station"
names(df)[names(df)=="L1"] <- "variable"
df$month <- factor(month(df$date))
df$season <- "none"
df$season[df$month %in% c(12,2,1)] <- "1.DJF"
df$season[df$month %in% c(3,4,5)] <-  "2.MAM"
df$season[df$month %in% c(6,7,8)] <-  "3.JJA"
df$season[df$month %in% c(9,10,11)] <-  "4.SON"
df_rgenerateprec <- df
write.csv(df_rgenerateprec, "df_ramwgen.csv")
write.csv(df_rgenerateprec, "df_rgenerateprec.csv")
df_rgenerateprec <- read.csv(file = "df_rgenerateprec.csv", header = T)
View(df_rgenerateprec)
df_rgenerateprec$X<- NULL
library(ggplot2)
library(dplyr)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
geom_line() +
facet_wrap(~ variable)
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
=======
regions = Precipiation_region
)
write.modeldef(ConstantModel,file = "Model0_Init.def")
Model0.Init <- read.modeldef("Model0_Init.def", model.type =  "logistic", siteinfo = Precipitation_site_info)
Model0.Init
Model0.fitted <- GLCfit("logistic", siteinfo = Precipitation_site_info, model.def = Model0.Init,
data.file = "PRECIPITATION.dat", diagnostics = 1, nprev.required = 0)
Model0.Init <- read.modeldef("Model0_Init.def", model.type =  "logistic", siteinfo = Precipitation_site_info)
Precipitation_site_info
Precipiation_region
str(Precipiation_region)
Precipiation_region <- data.frame(Region = c(1,2), Name = factor(unique(CatStations$State)))
str(Precipiation_region)
Precipitation_site_info <- make.siteinfo(Precipitation_site, site.names = 1, region.col = 4,
attr.names = c("Longitude", "Latitude") ,
regions = Precipiation_region
)
Precipitation_site_info <- make.siteinfo(Precipitation_site, site.names = 1, region.col = 4,
attr.names = c("Longitude", "Latitude") #,
#regions = Precipiation_region
)
Precipitation_site_info
Model0.Init <- read.modeldef("Model0_Init.def", model.type =  "logistic", siteinfo = Precipitation_site_info)
Model0.Init <- read.modeldef("Model0_Init.def", model.type =  "logistic", siteinfo = Precipitation_site_info)
rm(list = ls())
library(tidyverse)
library(Rglimclim)
load('BullooModInp.RData')
data(GLCdemo)
Site_4Char <- c("T133", "T137", "T040", "T120","T000", "T001", "T002", "T003", "T004", "T007")
Station_10 <- STATION_NAMES[1:10]
PRECIPITATION_New <- PRECIPITATION %>%
rename(Year = year, Month = month, Day = day,
T133 = T36133, T137 = T36137, T040 = T44040, T120 = T44120, T000 = T45000, T001 = T45001,
T002=T45002,   T003 = T45003, T004 = T45004, T007 = T45007) %>%
gather(Site, Rain, T133:T007, factor_key = TRUE) %>%
select(Year, Month, Day , Site, Rain) #%>%
PRECIPITATION_New <- PRECIPITATION_New %>% filter(Year %in% c(1989:2018)) %>% arrange(Month, Day)
PRECIPITATION_New$Year <- as.numeric(PRECIPITATION_New$Year)
PRECIPITATION_New$Month <- as.numeric(PRECIPITATION_New$Month)
PRECIPITATION_New$Day <- as.numeric(PRECIPITATION_New$Day)
head(PRECIPITATION_New)
str(PRECIPITATION_New)
# Site Dataframe
Precipitation_site <- CatStations %>% select(2:4,6) %>% slice(1:10) %>%
mutate(Region = ifelse(State == "QLD", 1, 2),
Name = factor(Name))
Precipitation_site$State <- NULL
row.names(Precipitation_site) <- Site_4Char
str(Precipitation_site)
Precipiation_region <- data.frame(Region = c(1,2), Name = factor(unique(CatStations$State)))
str(Precipiation_region)
write.GLCdata(PRECIPITATION_New,file = 'PRECIPITATION.dat')
Precipitation_site_info <- make.siteinfo(Precipitation_site, site.names = 1, region.col = 4,
attr.names = c("Longitude", "Latitude") ,
regions = Precipiation_region
)
Precipitation_site
Precipiation_region
Precipitation_site_info
ConstantModel
Precipiation_region <- data.frame(Region = c(0,1,2), Name = factor("Whole Area" , unique(CatStations$State)))
View(Precipiation_region)
unique(CatStations$State)
reg <- unique(CatStations$State)
Precipiation_region <- data.frame(Region = c(0,1,2), Name = factor(c("Whole Area" ,reg)))
str(Precipiation_region)
View(Precipiation_region)
unique(CatStations$State)
reg <- ("Whole Area", unique(CatStations$State) )
reg <- c("Whole Area", unique(CatStations$State) )
reg
CatStations$State
unique(CatStations$State)
Precipiation_region <- data.frame(Region = c(1,2), Name = factor(unique(CatStations$State)))
str(Precipiation_region)
str(Precipiation_region)
write.GLCdata(PRECIPITATION_New,file = 'PRECIPITATION.dat')
Precipitation_site_info <- make.siteinfo(Precipitation_site, site.names = 1, region.col = 4,
attr.names = c("Longitude", "Latitude") ,
regions = Precipiation_region)
Precipitation_site_info
write.modeldef(ConstantModel,file = "Model0_Init.def")
Model0.Init <- read.modeldef("Model0_Init.def", model.type =  "logistic", siteinfo = Precipitation_site_info)
days$DJF
TX_CLIMATE <- NULL
TN_CLIMATE <- NULL
PREC_CLIMATE <- NULL
# Calibration period
year_max <- 2018
year_min <- 1989
origin <- "1989-1-1"
station <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004", "T45007")
names(ELEVATION) <- STATION_NAMES
names(LOCATION) <- STATION_NAMES
ELEVATION[station]
LOCATION[station]
n_GPCA_iter <- 5
n_GPCA_iteration_residuals <- 5
p_test <- 1
p_prec <- 3
exogen <- NULL
exogen_sim <- exogen
generationP03GPCA_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_prec,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
library(RMAWGEN)
generationP03GPCA_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_prec,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
install.packages("ggfortify")
library(ggplot2)
df_rgenerateprec <- read.csv(file = "df_rgenerateprec.csv", header = T)
View(df_rgenerateprec)
df_rgenerateprec$X<- NULL
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
geom_line(group = l) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, group = l)) +
geom_line() +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, group = 1)) +
geom_line() +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, group = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
geom_line() +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
View(df_rgenerateprec)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
geom_point() +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
class(df_rgenerateprec$date)
df_rgenerateprec$date <- as.Date(df_rgenerateprec$date)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value, group = 1)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value, group = variable)) +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
library(ggplot2)
library(dplyr)
library(ggfortify)
df_rgenerateprec <- read.csv(file = "df_rgenerateprec.csv", header = T)
View(df_rgenerateprec)
df_rgenerateprec$X<- NULL
df_rgenerateprec$date <- as.Date(df_rgenerateprec$date)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value, group = variable)) +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value, group = variable)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
library(lubridate)
str(df_rgenerateprec)
df_rgenerateprec$date <- as.Date(df_rgenerateprec$date)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
str(df_rgenerateprec)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value)) +
scale_x_date(limit=c(as.Date("1989-01-01"),as.Date("2000-01-01"))) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value), group = variable) +
scale_x_date(limit=c(as.Date("1989-01-01"),as.Date("2000-01-01"))) +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value), group = 1) +
scale_x_date(limit=c(as.Date("1989-01-01"),as.Date("2000-01-01"))) +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value), group = variable) +
scale_x_date(limit=c(as.Date("1989-01-01"),as.Date("2000-01-01"))) +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value, group = variable)) +
scale_x_date(limit=c(as.Date("1989-01-01"),as.Date("2000-01-01"))) +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value, group = variable)) +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value, group = variable)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = 'date', y = 'value')) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
df_rgenerateprec$date <- as_date(df_rgenerateprec$date)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = 'date', y = 'value', variable)) +
geom_line() +
#  facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, variable)) +
>>>>>>> 4780b0b27ca64535e7a2098cb718024ab2af092e
geom_line() +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
<<<<<<< HEAD
ggdf_rgenerateprec
df_rgenerateprec_ts_obs <- df_rgenerateprec %>% filter(variable == obs) %>% dplyr::select(value)
df_rgenerateprec_ts_obs <- df_rgenerateprec %>% filter(variable == "obs") %>% dplyr::select(value)
View(df_rgenerateprec_ts_obs)
origin
df_rgenerateprec_ts_obs <- ts(df_rgenerateprec_ts_obs, start(1989, 1), frequency = 7)
autoplot(stats::acf(df_rgenerateprec_ts_obs))
df_rgenerateprec_ts_obs <- df_rgenerateprec %>% filter(variable == "obs") %>% dplyr::select(value)
autoplot(stats::acf(df_rgenerateprec_ts_obs))
df_rgenerateprec_ts_obs <- df_rgenerateprec %>% filter(variable == "obs") %>% dplyr::select(value)
autoplot(stats::acf(df_rgenerateprec_ts_obs))
df_rgenerateprec_ts_obs <- df_rgenerateprec %>% filter(variable == "obs") %>% dplyr::select(value)
df_rgenerateprec_ts_obs <- ts(df_rgenerateprec_ts_obs, start(1989, 1), frequency = 7)
autoplot(stats::acf(df_rgenerateprec_ts_obs))
autoplot(df_rgenerateprec_ts_obs)
autoplot.ts(df_rgenerateprec_ts_obs)
install.packages("ggfortify")
library(ggfortify)
autoplot(stats::acf(df_rgenerateprec_ts_obs))
autoplot(df_rgenerateprec_ts_obs)
autoplot(stats::acf(df_rgenerateprec_ts_obs)) + ggtitle("Auto correlation for observed rainfall")
autoplot(stats::pacf(df_rgenerateprec_ts_obs)) + ggtitle("Partial correlation for observed rainfall")
df_rgenerateprec_ts_gen <- df_rgenerateprec %>% filter(variable == "gen") %>% dplyr::select(value)
df_rgenerateprec_ts_gen <- ts(df_rgenerateprec_ts_gen, start(1989, 1), frequency = 7)
autoplot(stats::acf(df_rgenerateprec_ts_gen)) + ggtitle("Auto correlation for generated rainfall")
autoplot(stats::pacf(df_rgenerateprec_ts_gen)) + ggtitle("Partial correlation for generated rainfall")
library(RMAWGEN)
load('BullooModInp.RData')
TX_CLIMATE <- NULL
TN_CLIMATE <- NULL
PREC_CLIMATE <- NULL
# Calibration period
year_max <- 2018
year_min <- 1989
origin <- "1989-1-1"
station <- c("T36133", "T36137", "T44040", "T44120", "T45000", "T45001", "T45002", "T45003", "T45004", "T45007")
names(ELEVATION) <- STATION_NAMES
names(LOCATION) <- STATION_NAMES
ELEVATION[station]
LOCATION[station]
n_GPCA_iter <- 5
n_GPCA_iteration_residuals <- 5
p_test <- 1
p_prec <- 3
exogen <- NULL
exogen_sim <- exogen
generationP03GPCA_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_prec,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
generationP01GPCA_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_test,
n_GPCA_iteration=n_GPCA_iter,
n_GPCA_iteration_residuals=n_GPCA_iteration_residuals,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
generationP03_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_prec,
n_GPCA_iteration=0,
n_GPCA_iteration_residuals=0,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
generationP01_prec <- ComprehensivePrecipitationGenerator(station=station,
prec_all=PRECIPITATION,
year_min=year_min,
year_max=year_max,
p=p_test,
n_GPCA_iteration=0,
n_GPCA_iteration_residuals=0,
exogen=exogen,
exogen_sim=exogen_sim,
sample="monthly",
mean_climate_prec=PREC_CLIMATE,
no_spline=FALSE)
# RMAWGEN
rmawgen_gen <- generationP01GPCA_prec$prec_gen
rmawgen__mes <- generationP01GPCA_prec$prec_mes
rmawgen_mes <- generationP01GPCA_prec$prec_mes
df_rmawgen <-
df1 <- list(obs=rmawgen_mes[,names(rmawgen_gen)],gen=rmawgen_gen)
df1 <- list(obs=rmawgen_mes[,names(rmawgen_gen)],gen=rmawgen_gen)
df1 <- list(obs=rmawgen_mes[,names(rmawgen_gen)],gen=rmawgen_gen)
for ( i in 1:length(df1)) {
df1[[i]]$date <- as.Date(origin)+days(1:nrow(df1[[i]]))-1
}
df1 <- melt(df1,id="date")
names(df1)[names(df1)=="variable"] <- "station"
names(df1)[names(df1)=="L1"] <- "variable"
df1$month <- factor(month(df1$date))
df1$season <- "none"
df1$season[df1$month %in% c(12,2,1)] <- "1.DJF"
df1$season[df1$month %in% c(3,4,5)] <-  "2.MAM"
df1$season[df1$month %in% c(6,7,8)] <-  "3.JJA"
df1$season[df1$month %in% c(9,10,11)] <-  "4.SON"
df_rmawgen <- df1
write.csv(df_rmawgen, "df_rmawgen.csv")
df_rmawgen <- read.csv("df_rmawgen.csv", header = F)
View(df_rmawgen)
df_rmawgen <- read.csv("df_rmawgen.csv", header = T)
df_rmawgen$X <- NULL
ggdf_rmawgen <- ggplot(df_rmawgen, aes(x = date, y = value)) +
=======
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, variable)) +
geom_line() +
#  facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value,color =  variable)) +
geom_line() +
#  facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value,color =  variable)) +
geom_line(alpha = 0.2) +
#  facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value,color =  variable)) +
geom_line(alpha = 0.5) +
#  facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value,color =  variable)) +
geom_line() +
#  facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
install.packages("plotly", dependencies = FALSE)
install.packages("plotly")
library(plotly)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value,color =  variable)) +
geom_area(fill="#69b3a2", alpha=0.5)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value,color =  variable)) +
geom_area(fill="#69b3a2", alpha=0.5)+
geom_line(color="#69b3a2") +
#  facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggplotly(ggdf_rgenerateprec)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
geom_area(fill="#69b3a2", alpha=0.5)+
geom_line(color="#69b3a2") +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggplotly(ggdf_rgenerateprec)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
geom_line(color="#69b3a2") +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value)) +
>>>>>>> 4780b0b27ca64535e7a2098cb718024ab2af092e
geom_line() +
facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
<<<<<<< HEAD
ggdf_rmawgen
df_rmawgen_ts_obs <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(value)
df_rmawgen_ts_obs <- ts(df_rmawgen_ts_obs, start(1989, 1), frequency = 7)
autoplot(stats::acf(df_rmawgen_ts_obs)) + ggtitle("Auto correlation for observed rainfall")
autoplot(stats::pacf(df_rmawgen_ts_obs)) + ggtitle("Partial correlation for observed rainfall")
df_rmawgen_ts_gen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(value)
df_rmawgen_ts_gen <- ts(df_rmawgen_ts_gen, start(1989, 1), frequency = 7)
autoplot(stats::acf(df_rmawgen_ts_gen)) + ggtitle("Auto correlation for generated rainfall")
autoplot(stats::pacf(df_rmawgen_ts_gen)) + ggtitle("Partial correlation for generated rainfall")
View(df_rgenerateprec)
# boxplot for rmawgen gen vs observed
str(df_rmawgen)
ggbox_rmawgen <- ggplot(df_rmawgen , aes(x = factor(variable), y = value)) + geom_boxplot()
ggbox_rmawgen
data_boxplot_rmawgen <- df_rmawgen %>% dplyr::select(date, value) %>% mutate(observed = variable == "obs")
data_boxplot_rmawgen <- df_rmawgen %>% dplyr::select(date, value,observed = variable) %>%
filter(variable == "obs")
data_boxplot_rmawgen <- df_rmawgen %>% dplyr::select(date, value,variable) %>%
filter(variable == "obs")
View(data_boxplot_rmawgen)
data_boxplot_rmawgen <- df_rmawgen %>% dplyr::select(date, value) %>%
filter(variable == "obs")
data_boxplot_rmawgen <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(date, value)
data_boxplot_rmawgen <- df_rmawgen %>% rename_if(variable == "obs", "observed") %>% dplyr::select(date, value)
data_boxplot_rmawgen <- df_rmawgen %>% rename_if(variable == "obs", observed) %>% dplyr::select(date, value)
ggdf_rgenerateprec
autoplot(stats::acf(df_rgenerateprec_ts_obs)) + ggtitle("Auto correlation for observed rainfall")
ggdf_rgenerateprec
autoplot(stats::acf(df_rgenerateprec_ts_obs)) + ggtitle("Auto correlation for observed rainfall")
autoplot(stats::pacf(df_rgenerateprec_ts_obs)) + ggtitle("Partial correlation for observed rainfall")
autoplot(stats::acf(df_rgenerateprec_ts_gen)) + ggtitle("Auto correlation for generated rainfall")
autoplot(stats::pacf(df_rgenerateprec_ts_gen)) + ggtitle("Partial correlation for generated rainfall")
ggdf_rmawgen
autoplot(stats::acf(df_rmawgen_ts_obs)) + ggtitle("Auto correlation for observed rainfall")
autoplot(stats::pacf(df_rmawgen_ts_obs)) + ggtitle("Partial correlation for observed rainfall")
autoplot(stats::acf(df_rmawgen_ts_gen)) + ggtitle("Auto correlation for generated rainfall")
autoplot(stats::pacf(df_rmawgen_ts_gen)) + ggtitle("Partial correlation for generated rainfall")
str(df_rmawgen)
data_ramwgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rmawgen)
names(data_rmawgen) <- c("date", "ramwgen", "month")
str(data_rmawgen)
data_observed <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(date, value, month)
names(data_observed) <- c("date", "observed", "month")
str(data_observed)
str(df_rgenerateprec)
data_rgenerateprec <- df_rgenerateprec %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
str(data_rgenerateprec)
names(data_rgenerateprec) <- c("date", "ramwgen", "month")
names(data_rgenerateprec) <- c("date", "rgenerateprec", "month")
str(data_rgenerateprec)
data_all <- merge(data_rmawgen, data_observed, by = c("date", "month"))
data_all <- merge(data_rmawgen, data_observed, by = c("date"))
View(data_all)
View(data_ramwgen)
View(data_observed)
View(data_rmawgen)
data_all <- merge(data_rmawgen, data_observed, by = c("date","month"))
data_all <- inner_join(data_rmawgen, data_observed, by = NULL)
data_all <- inner_join(data_all,data_rgenerateprec, by = NULL)
View(data_all)
str(data_rmawgen)
names(data_rmawgen) <- c("date", "rmawgen", "month")
ggplot(df_all) + geom_boxplot(observed) + geom_boxplot(rmawgen)
ggplot(data_all) + geom_boxplot(observed) + geom_boxplot(rmawgen)
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(value, month)
names(data_rmawgen) <- c("rmawgen", "month")
str(data_rmawgen)
data_observed <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(value, month)
names(data_observed) <- c("observed", "month")
str(data_observed)
data_rgenerateprec <- df_rgenerateprec %>% filter(variable == "gen") %>% dplyr::select(value, month)
names(data_rgenerateprec) <- c("rgenerateprec", "month")
str(data_rgenerateprec)
data_all <- inner_join(data_rmawgen, data_observed, by = NULL)
data_all <- NULL
data_all <- data.frame()
data_all <- inner_join(data_rmawgen, data_observed, by = NULL)
data_all <- data.frame()
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rmawgen) <- c("date", "rmawgen", "month")
str(data_rmawgen)
data_observed <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(date, value, month)
names(data_observed) <- c("date", "observed", "month")
str(data_observed)
data_rgenerateprec <- df_rgenerateprec %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rgenerateprec) <- c("date", "rgenerateprec", "month")
str(data_rgenerateprec)
library(tidyr)
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rmawgen) <- c("date", "rmawgen", "month")
str(data_rmawgen)
data_observed <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(date, value, month)
names(data_observed) <- c("date", "observed", "month")
str(data_observed)
data_rgenerateprec <- df_rgenerateprec %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rgenerateprec) <- c("date", "rgenerateprec", "month")
str(data_rgenerateprec)
data_rmawgen$month <- as.factor(data_rmawgen$month)
str(data_rmawgen)
data_rgenerateprec$month <- as.factor(data_rgenerateprec$month)
data_observed$month <- as.factor(data_observed$month)
str(data_observed)
str(data_rgenerateprec)
data_all <- data.frame()
data_all <- inner_join(data_rmawgen, data_observed, by = NULL)
data_rmawgen$date <- as.date(data_rmawgen$date)
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rmawgen) <- c("date", "rmawgen", "month")
data_rmawgen$date <- Date(data_rmawgen$date)
data_rmawgen$date <- as.POSIXct(data_rmawgen$date)
data_rmawgen$date <- as.Date(data_rmawgen$date, format = "%Y-%m-%d")
str(data_rmawgen)
data_rgenerateprec$date <- as.Date(data_rgenerateprec$date, format = "%Y-%m-%d")
data_observed$date <- as.Date(data_observed$date, format = "%Y-%m-%d")
data_all <- data.frame()
data_all <- inner_join(data_rmawgen, data_observed, by = NULL)
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rmawgen) <- c("date", "rmawgen", "month")
data_rmawgen$date <- as.Date(data_rmawgen$date, format = "%Y-%m-%d")
data_rmawgen$month <- as.factor(data_rmawgen$month)
str(data_rmawgen)
data_observed <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(date, value, month)
names(data_observed) <- c("date", "observed", "month")
data_observed$date <- as.Date(data_observed$date, format = "%Y-%m-%d")
data_observed$month <- as.factor(data_observed$month)
str(data_observed)
data_rgenerateprec <- df_rgenerateprec %>% filter(variable == "gen") %>% dplyr::select(date, value, month)
names(data_rgenerateprec) <- c("date", "rgenerateprec", "month")
data_rgenerateprec$date <- as.Date(data_rgenerateprec$date, format = "%Y-%m-%d")
data_rgenerateprec$month <- as.factor(data_rgenerateprec$month)
str(data_rgenerateprec)
data_all <- data.frame()
data_all <- inner_join(data_rmawgen, data_observed, by = NULL)
data_all <- inner_join(data_all,data_rgenerateprec, by = NULL)
ggplot(data_all) + geom_boxplot(observed) + geom_boxplot(rmawgen)
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(value)
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(value)
names(data_rmawgen) <- c("rmawgen")
library(ggplot2)
library(dplyr)
library(ggfortify)
df_rgenerateprec <- read.csv(file = "df_rgenerateprec.csv", header = T)
df_rgenerateprec$X<- NULL
df_rmawgen <- read.csv("df_rmawgen.csv", header = T)
df_rmawgen$X <- NULL
data_rmawgen <- df_rmawgen %>% filter(variable == "gen") %>% dplyr::select(value)
names(data_rmawgen) <- c("rmawgen")
names(data_observed) <- c("observed")
data_observed <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(value)
names(data_observed) <- c("observed")
data_rgenerateprec <- df_rgenerateprec %>% filter(variable == "gen") %>% dplyr::select(value)
names(data_rgenerateprec) <- c("rgenerateprec")
data_all <- cbind(data_observed, data_rmawgen, data_rgenerateprec)
View(data_all)
data_all <- cbind(obs = data_observed, data_rmawgen, data_rgenerateprec)
data_all <- cbind(data_observed, data_rmawgen, data_rgenerateprec)
names(data_all)
data_observed <- df_rmawgen %>% filter(variable == "obs") %>% dplyr::select(date , month, value)
#names(data_observed) <- c("observed")
names(data_observed) <- c("date", "month" ,"observed")
data_all <- cbind(data_observed, data_rmawgen, data_rgenerateprec)
library(tidyr)
View(df_rmawgen)
data_all_long <- gather(data_all, variable, value, 3:4, factor_key = TRUE)
View(data_all_long)
data_all_long <- gather(data_all, variable, value, 3:5, factor_key = TRUE)
ggplot(data_all_long, aes(x = factor(variable), y = value)) +geom_boxplot()
# boxplot
ggplot(data_all_long, aes(x = factor(variable), y = value)) +geom_boxplot() + ylim(NA, 50)
str(data_all_long)
data_all_long$month <- factor(data_all_long$month)
# boxplot for months
ggplot(data_all_long, aes(x = month), y = vaue) + geom_boxplot() +facet_wrap( ~ variable)
# boxplot for months
ggplot(data_all_long, aes(x = month), y = vaue) + facet_wrap( ~ variable) +geom_boxplot()
ecdf(data_all$observed)
observed.ecdf <- ecdf(data_all$observed)
plot(observed.ecdf())
plot(observed.ecdf)
autoplot(observed.ecdf())
autoplot(observed.ecdf)
autoplot(observed.ecdf) + xlab("observed")
rgenerateprec.ecdf <- ecdf(data_all$rgenerateprec)
autoplot(rgenerateprec.ecdf) + xlab("rgenerateprec") + ggtitle("Emperical density plot for rgenerateprec data")
rmawgen.ecdf <- ecdf(data_all$rmawgen)
autoplot(rmawgen.ecdf) + xlab("rmawgen") + ggtitle("Emperical density plot for rmawgen data")
# boxplot
ggplot(data_all_long, aes(x = factor(variable), y = value)) +geom_boxplot()
# boxplot for months
ggplot(data_all_long, aes(x = month), y = vaue) + facet_wrap( ~ variable) +geom_boxplot()
autoplot(observed.ecdf) + xlab("observed") + ggtitle("Emperical density plot for observed data")
autoplot(rmawgen.ecdf) + xlab("rmawgen") + ggtitle("Emperical density plot for rmawgen data")
autoplot(rgenerateprec.ecdf) + xlab("rgenerateprec") + ggtitle("Emperical density plot for rgenerateprec data")
str(data_all_long)
data_all_long$value <- as.integer(data_all_long$value)
# boxplot
ggplot(data_all_long, aes(x = factor(variable), y = value)) +geom_boxplot()
ggplot(data_all_long, aes(x = month), y = vaue) + facet_grid(. ~ variable) +geom_boxplot()
=======
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
df_rmawgen <- read.csv("df_rmawgen.csv", header = T)
df_rmawgen$X <- NULL
ggdf_rmawgen <- ggplot(df_rmawgen, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rmawgen
df_rgenerateprec <- read.csv(file = "df_rgenerateprec.csv", header = T)
df_rgenerateprec$X<- NULL
df_rgenerateprec$date <- as_date(df_rgenerateprec$date)
df_rgenerateprec_ts <- ts(df_rgenerateprec$value, start = 1989, frequency = 4)
df_rgenerateprec_ts
library(ggplot2)
autoplot(df_rgenerateprec_ts)
library(dplyr)
autoplot(df_rgenerateprec$value)
library(ggfortify)
autoplot(df_rgenerateprec$value)
autoplot(df_rgenerateprec_ts)
library(ggplot2)
library(dplyr)
library(ggfortify)
library(lubridate)
library(plotly)
df_rgenerateprec <- read.csv(file = "df_rgenerateprec.csv", header = T)
View(df_rgenerateprec)
str(df_rgenerateprec)
df_rgenerateprec$X<- NULL
df_rgenerateprec$date <- as_date(df_rgenerateprec$date)
df_rgenerateprec_ts <- ts(df_rgenerateprec$value, start = 1989, frequency = 4)
autoplot(df_rgenerateprec_ts)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rgenerateprec
df_rmawgen <- read.csv("df_rmawgen.csv", header = T)
df_rmawgen$X <- NULL
ggdf_rmawgen <- ggplot(df_rmawgen, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rmawgen
ggdf_rgenerateprec
df_rgenerateprec
df_rmawgen$date <- as_date(df_rmawgen$date)
df_rmawgen_ts <- ts(df_rgenerateprec$value, start = 1989, frequency = 4)
ggdf_rmawgen <- ggplot(df_rmawgen, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between  oberved and generated for RMAWGEN") +
ylab("Rainfall values of observed vs generated in mm")
ggdf_rmawgen
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated for RGENERATEPREC") +
ylab("Rainfall values of observed vs generated in mm") + scale_x_date(breaks = date_breaks("months"),
labels = date_format("%b"))
ggdf_rgenerateprec
library(scales)
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated for RGENERATEPREC") +
ylab("Rainfall values of observed vs generated in mm") + scale_x_date(breaks = date_breaks("months"),
labels = date_format("%b"))
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated for RGENERATEPREC") +
ylab("Rainfall values of observed vs generated in mm") + scale_x_date(breaks = date_breaks("months"),
labels = date_format("%m/%d")) +
theme(axis.text.x = element_text(angle=45))
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated for RGENERATEPREC") +
ylab("Rainfall values of observed vs generated in mm") + scale_x_date(breaks = date_breaks("year"),
labels = date_format("%m/%d")) +
theme(axis.text.x = element_text(angle=45))
ggdf_rgenerateprec
#Time Series plot for generated vs observed
ggdf_rgenerateprec <- ggplot(df_rgenerateprec, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between oberved and generated for RGENERATEPREC") +
ylab("Rainfall values of observed vs generated in mm") + scale_x_date(breaks = date_breaks("year")) +
theme(axis.text.x = element_text(angle=45))
ggdf_rgenerateprec
ggdf_rmawgen <- ggplot(df_rmawgen, aes(x = date, y = value, color = variable)) +
geom_line() +
#facet_wrap(~ variable, nrow = 2) +
ggtitle("Time series plot between  oberved and generated for RMAWGEN") +
ylab("Rainfall values of observed vs generated in mm")  + scale_x_date(breaks = date_breaks("year")) +
theme(axis.text.x = element_text(angle=45))
ggdf_rmawgen
ggdf_rgenerateprec
df_rgenerateprec <- read.csv(file = "df_rgenerateprec.csv", header = T)
summary(df_rgenerateprec)
>>>>>>> 4780b0b27ca64535e7a2098cb718024ab2af092e
